const a="https://api.cnapss.com/api".replace(/\/$/,""),c=e=>({"Content-Type":"application/json",...e?{Authorization:`Bearer ${e}`}:{}});async function f({school:e,page:s=1,limit:o=20,q:t="",sort:r="new"}){const n=new URL(`${a}/public/${e}/posts`);s&&n.searchParams.set("page",String(s)),o&&n.searchParams.set("limit",String(o)),t&&n.searchParams.set("q",t),r&&n.searchParams.set("sort",r);const i=await fetch(n);if(!i.ok)throw new Error("Failed to load public posts");return i.json()}async function l({school:e,token:s,page:o,limit:t}={}){const r=new URL(`${a}/${e}/posts`);o&&r.searchParams.set("page",String(o)),t&&r.searchParams.set("limit",String(t));const n=await fetch(r,{headers:c(s)});if(!n.ok)throw new Error("Failed to load posts");return n.json()}async function d({school:e,token:s,id:o}){const t=await fetch(`${a}/${e}/posts/${o}`,{headers:c(s)});if(!t.ok)throw new Error("Failed to load post");return t.json()}async function u({school:e,token:s,title:o,content:t}){const r=await fetch(`${a}/${e}/posts`,{method:"POST",headers:c(s),body:JSON.stringify({title:o,content:t})});if(!r.ok)throw new Error("Failed to create post");return r.json()}async function p({school:e,token:s,id:o,title:t,content:r}){const n=await fetch(`${a}/${e}/posts/${o}`,{method:"PUT",headers:c(s),body:JSON.stringify({title:t,content:r})});if(!n.ok)throw new Error("Failed to update post");return n.json()}async function w({school:e,token:s,id:o}){const t=await fetch(`${a}/${e}/posts/${o}`,{method:"DELETE",headers:c(s)});if(!t.ok)throw new Error("Failed to delete post");return t.json()}async function $({school:e,token:s,id:o}){const t=await fetch(`${a}/${e}/posts/${o}/thumbs`,{method:"POST",headers:c(s)});if(!t.ok)throw new Error("Failed to toggle like");return t.json()}async function m({school:e,token:s,email:o}){const t=await fetch(`${a}/${e}/posts/liked/${encodeURIComponent(o)}`,{headers:c(s)});if(!t.ok)throw new Error("Failed to load liked posts");return t.json()}async function P({school:e,token:s,email:o}){const t=await fetch(`${a}/${e}/posts/commented/${encodeURIComponent(o)}`,{headers:c(s)});if(!t.ok)throw new Error("Failed to load commented posts");return t.json()}const h=()=>{try{return localStorage.getItem("token")}catch{return""}};async function y(e,s,o={}){const t=o.token||h();return d({school:s,token:t,id:e})}export{m as a,P as b,u as c,d,w as e,y as f,f as g,l,$ as t,p as u};
