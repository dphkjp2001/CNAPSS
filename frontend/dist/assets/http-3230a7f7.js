const r="https://api.cnapss.com/api".replace(/\/$/,""),h=["token","jwt","accessToken","authToken","CNAPSS_TOKEN","CNAPSS_AUTH"];function p(){for(const t of h){const e=localStorage.getItem(t)||sessionStorage.getItem(t);if(e)return e}return null}function u(){for(const t of h){try{localStorage.removeItem(t)}catch{}try{sessionStorage.removeItem(t)}catch{}}}function d(){try{window.dispatchEvent(new CustomEvent("CNAPSS_TOKEN_EXPIRED"))}catch{}}async function l(t,e={}){console.log("http.request called with:",{url:t,options:e});const a=p(),o=new Headers(e.headers||{});console.log("http.request headers before setting Content-Type and Authorization:",o),!o.has("Content-Type")&&!(e.body instanceof FormData)&&(console.log("Setting Content-Type to application/json"),o.set("Content-Type","application/json")),a&&o.set("Authorization",`Bearer ${a}`),console.log("Final headers for fetch:",o);const n=await fetch(t,{...e,headers:o,credentials:"include"});if(n.status===401){console.log("Received 401 Unauthorized response");let c={};try{c=await n.clone().json()}catch{}if(n.headers.get("x-token-expired")==="1"||(c==null?void 0:c.code)==="TOKEN_EXPIRED")throw u(),d(),new Error("TOKEN_EXPIRED")}const s=await(async()=>(console.log("Response headers:",n.headers),(n.headers.get("Content-Type")||"").includes("application/json")?n.json():n.text()))();if(!n.ok){console.log("Response not OK:",n.status,s);const c=typeof s=="object"&&(s!=null&&s.message)?s.message:String(s),i=new Error(c||`HTTP ${n.status}`);throw i.status=n.status,i.data=s,i}return s}function g(t){const e=t.toString().startsWith("http")?t:`${r}${t}`;return l(e,{method:"GET"})}function E(t,e){console.log("postJson called with:",{url:t,body:e});const a=t.toString().startsWith("http")?t:`${r}${t}`,o={method:"POST"};return console.log("postJson opts before body assignment:",o),e instanceof FormData?o.body=e:o.body=JSON.stringify(e||{}),l(a,o)}function T(t,e){const a=t.toString().startsWith("http")?t:`${r}${t}`,o={method:"PUT"};return e instanceof FormData?o.body=e:o.body=JSON.stringify(e||{}),l(a,o)}function m(t){const e=t.toString().startsWith("http")?t:`${r}${t}`;return l(e,{method:"DELETE"})}function S(t,e={}){const{method:a="GET",body:o=null,headers:n={},useApiBase:s=!0}=e,i=typeof t=="string"&&/^https?:\/\//i.test(t)||s===!1?t:`${r}${t}`;let f={method:a,headers:n};return o instanceof FormData?f.body=o:o!=null&&(f.body=JSON.stringify(o)),l(i,f)}export{S as a,T as b,m as d,g,E as p};
